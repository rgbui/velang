
package Ve {
    [nick("string")]
    export interface String {
        new():string;
        new(val:string):string;
        readonly length:int;
        readonly count:int;
        readonly chars:string[];
        replace(old:String,newString:string):string;
        [unqiue("replace1")]
        replace(match:Regex,newString:string):string;
        contain(...str:string[]):bool;
        containOfAny(...str:string[]):bool;
        indexOf(str:String):int;
        lastIndexOf(str:String):int;
        indexOfAny(...str:string[]):int;
        lastIndexOfAny(...str:string[]):int;
        toLower():String;
        toUpper():String;
        match(regex:Regex):bool;
        split(...str:string[]):string[];
        filter(...str:string[]):string;
        substring(from:int,size:int):string;
        substring(from:int):string;
        reserve():string;
        pick(...regex:Regex[]):string[];
        at(pos:int):string;
        start(...str:string[]):bool;
        end(...str:string[]):bool;
    }
    [nick('regex')]
    export interface Regex{
         new(regexString:string):Regex;
    }
}
